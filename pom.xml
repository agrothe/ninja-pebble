<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2016 the original author or authors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.jjfidalgo</groupId>
    <artifactId>ninja-pebble</artifactId>
    <version>0.2.1</version>
    <packaging>pom</packaging>

    <name>${project.groupId}:${project.artifactId}</name>
    <description>Ninja pebble integration</description>
    <url>https://github.com/jjfidalgo/ninja-pebble</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <siteProjectVersion>${project.version}</siteProjectVersion>

        <ninja.version>5.3.1</ninja.version>
        <pebble.version>2.1.0</pebble.version>
        <guava.version>19.0</guava.version>
        <guice.version>4.0</guice.version>
        <slf4j.version>1.7.6</slf4j.version>
        <junit.version>4.12</junit.version>
        <mockito.version>1.10.19</mockito.version>

        <java.version>1.7</java.version>
    </properties>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <scm>
        <url>git@github.com:jjfidalgo/ninja-pebble.git</url>
        <connection>scm:git@github.com:jjfidalgo/ninja-pebble.git</connection>
        <developerConnection>scm:git@github.com:jjfidalgo/ninja-pebble.git</developerConnection>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/jjfidalgo/ninja-pebble/issues</url>
    </issueManagement>

    <modules>
        <module>ninja-pebble-module</module>
        <module>ninja-pebble-demo</module>
    </modules>

    <dependencies>
        <!-- Testing dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <developers>
        <developer>
            <name>Juan Fidalgo</name>
            <email>jjfidalgo@gmail.com</email>
            <organization></organization>
            <organizationUrl>https://github.com/jjfidalgo/ninja-pebble</organizationUrl>
        </developer>
    </developers>

    <profiles>
        <!-- Do a license check by running : mvn -P license license:check -->
        <!-- Update the license check by running : mvn -P license license:format -->
        <profile>
            <id>license</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.mycila.maven-license-plugin</groupId>
                        <artifactId>maven-license-plugin</artifactId>
                        <version>1.6.0</version>
                        <configuration>
                            <quiet>false</quiet>
                            <header>src/main/resources/license-header.txt</header>
                            <aggregate>true</aggregate>
                            <includes>
                                <include>**/src/**</include>
                                <include>**/pom.xml</include>
                            </includes>
                            <excludes>
                                <!-- ignore files produced during a build -->
                                <exclude>**/target/**</exclude>
                                <exclude>**/WEB-INF/classes/**</exclude>
                                <exclude>**/site/**</exclude>
                                <exclude>**/.DS_Store</exclude>

                                <!-- ignore binary files -->
                                <exclude>**/assets/**</exclude>
                                <exclude>**/views/**</exclude>
                            </excludes>
                            <useDefaultExcludes>false</useDefaultExcludes>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Profile to be use when releasing to OSSRH -->
        <!-- To release to OSSRH staging use

                    "mvn clean deploy -Prelease"

             - If <autoReleaseAfterClose> is set to false it only release to OSSRH staging
             - If <autoReleaseAfterClose> is set to true it releases to OSSRH staging and automatically to Maven Central Repository

           If release has been done to OSSRH it can be manually inspect the staging repository in the Nexus Repository Manager on,

                       https://oss.sonatype.org/service/local/staging/deploy/maven2/

           It can be trigger a release of the staging repository later with

                    "mvn nexus-staging:release -Prelease"

           If you find something went wrong you can drop the staging repository with

                    "mvn nexus-staging:drop -Prelease"

           As said If <autoReleaseAfterClose> is set to true then "mvn clean deploy -Prelease" releases to OSSRH staging and automatically to Maven Central Repository
           in one go.

           After releasing to Central check the artifacts are on

                    https://repo.maven.apache.org/maven2/com/github/jjfidalgo

           SNAPSHOT versions released cannot be promoted to Central Repository. If you wish your users to consume your SNAPSHOT versions,
           they would need to add the snapshot repository to their Nexus Repository Manager, settings.xml, or pom.xml.
           Successfully deployed SNAPSHOT versions will be found in https://oss.sonatype.org/content/repositories/snapshots/

           More info,

                https://maven.apache.org/guides/mini/guide-central-repository-upload.html
                http://central.sonatype.org/pages/ossrh-guide.html
                http://central.sonatype.org/pages/apache-maven.html
        -->
        <profile>
            <id>release</id>
            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
                <repository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>2.2.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.9.1</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.6</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>false</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
